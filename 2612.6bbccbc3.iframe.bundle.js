"use strict";(self.webpackChunklib_no=self.webpackChunklib_no||[]).push([[2612],{"./src/main/resources/react4xp/common/Map/Map.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Map:function(){return Map}});var _a,jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js");const isDevelopment="undefined"!=typeof process&&"development"===(null===(_a=process.env)||void 0===_a?void 0:"production");function formatMessage(level,message){return`[${(new Date).toISOString()}] [${level.toUpperCase()}] ${message}`}function stringifyContext(context){try{return JSON.stringify(context,null,2)}catch(_a){return String(context)}}const logger_debug=(message,context)=>{isDevelopment&&console.debug(formatMessage("debug",message),context?stringifyContext(context):"")},logger_warn=(message,context)=>{console.warn(formatMessage("warn",message),context?stringifyContext(context):"")},logger_error=(message,errorOrContext)=>{errorOrContext instanceof Error?console.error(formatMessage("error",message),errorOrContext):console.error(formatMessage("error",message),errorOrContext?stringifyContext(errorOrContext):"")},Map=({address:address="Allegaten 6, 4400 Flekkefjord",position:position=[58.2953903,6.6580986]})=>{const[pos,setPos]=(0,react.useState)(position),[isSsr,setIsSsr]=(0,react.useState)(!0),[hasError,setHasError]=(0,react.useState)(!1),[leafletComponents,setLeafletComponents]=(0,react.useState)(null);if((0,react.useEffect)(()=>{setIsSsr(!1),Promise.all([__webpack_require__.e(961),__webpack_require__.e(8048)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/react-leaflet/lib/index.js")).then(module=>{setLeafletComponents(module)}).catch(error=>{logger_error("Failed to load react-leaflet",error),setHasError(!0)})},[]),(0,react.useEffect)(()=>{if(position.length<2&&address){logger_debug("Geocoding address",{address:address});const addr=address.replace(/\n/g,",").replace(/ /g,"+");logger_debug("Formatted address for geocoding",{formattedAddress:addr}),fetch(`https://nominatim.openstreetmap.org/search?q=${addr}&format=json&polygon=1&addressdetails=1`).then(result=>{if(!result.ok)throw new Error(`Geocoding failed: ${result.status} ${result.statusText}`);return result.json()}).then(result=>{if(logger_debug("Geocoding result",{result:result}),Array.isArray(result)&&result.length){const[{lat:lat,lon:lon}]=result;setPos([parseFloat(lat),parseFloat(lon)]),setHasError(!1)}else logger_warn("No geocoding results found",{address:address,formattedAddress:addr});return result}).catch(error=>{logger_error("Geocoding request failed",error),setHasError(!0)})}},[position,address]),logger_debug("Map SSR state",{isSsr:isSsr}),isSsr)return null;if(!leafletComponents)return(0,jsx_runtime.jsx)("div",{className:"map-loading p-4 bg-gray-50 border border-gray-200 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-gray-600",children:"Loading map..."})});if(!pos||pos.length<2)return hasError?(0,jsx_runtime.jsx)("div",{className:"map-error p-4 bg-yellow-50 border border-yellow-200 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-yellow-800",children:"Unable to load map. Please check the address or try again later."})}):null;const{MapContainer:MapContainer,TileLayer:TileLayer,Marker:Marker,Popup:Popup}=leafletComponents;return(0,jsx_runtime.jsxs)(MapContainer,{center:pos,zoom:17,scrollWheelZoom:!1,className:"map-container",children:[(0,jsx_runtime.jsx)(TileLayer,{attribution:'&copy <a href="http://osm.org/copyright" rel="noreferrer">OpenStreetMap</a> contributors',url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"}),(0,jsx_runtime.jsx)(Marker,{position:pos,children:(0,jsx_runtime.jsx)(Popup,{children:`${address}`})})]})};try{Map.displayName="Map",Map.__docgenInfo={description:"Map component displays an interactive OpenStreetMap with location marker.\n\nDynamically imports react-leaflet to avoid bundling Leaflet in vendors.js,\nsignificantly reducing initial bundle size. Renders a Leaflet map using\nreact-leaflet with OpenStreetMap tiles. If only an address is provided (no\nposition), automatically geocodes it using the Nominatim API. Client-side\nonly component (returns null during SSR). Shows loading state while react-leaflet\nloads, and error message if geocoding or loading fails. The map is fixed at\nzoom level 17 with scroll wheel zoom disabled.",displayName:"Map",props:{address:{defaultValue:{value:"Allegaten 6, 4400 Flekkefjord"},description:"Address to display on the map (geocoded if position not provided)",name:"address",required:!1,type:{name:"string"}},position:{defaultValue:{value:"[58.2953903, 6.6580986]"},description:"Map center position as [latitude, longitude]",name:"position",required:!1,type:{name:"number[] | [number, number]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/main/resources/react4xp/common/Map/Map.tsx#Map"]={docgenInfo:Map.__docgenInfo,name:"Map",path:"src/main/resources/react4xp/common/Map/Map.tsx#Map"})}catch(__react_docgen_typescript_loader_error){}}}]);